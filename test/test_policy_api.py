# coding: utf-8

"""
    Layered Control

    LI Control provides dynamic runtime security and analytics for containerized applications. You can find out more about the Layered Insight Suite at [http://layeredinsight.com](http://layeredinsight.com).

    OpenAPI spec version: 0.9.4
    Contact: help@layeredinsight.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import layint_runtime_api
from layint_runtime_api.rest import ApiException
from layint_runtime_api.apis.policy_api import PolicyApi


class TestPolicyApi(unittest.TestCase):
    """ PolicyApi unit test stubs """

    def setUp(self):
        self.api = layint_runtime_api.apis.policy_api.PolicyApi()

    def tearDown(self):
        pass

    def test_add_policy(self):
        """
        Test case for add_policy

        Create new security policy
        """
        pass

    def test_delete_policy(self):
        """
        Test case for delete_policy

        Delete policy
        """
        pass

    def test_get_containers_running_policy(self):
        """
        Test case for get_containers_running_policy

        Get containers running a specific policy
        """
        pass

    def test_get_policies(self):
        """
        Test case for get_policies

        Get all policies
        """
        pass

    def test_get_policy(self):
        """
        Test case for get_policy

        Get specific policy
        """
        pass

    def test_get_policy_by_name(self):
        """
        Test case for get_policy_by_name

        Get specific policy by name
        """
        pass

    def test_suspend_policy(self):
        """
        Test case for suspend_policy

        Suspend security policy
        """
        pass

    def test_update_policy(self):
        """
        Test case for update_policy

        Update security policy
        """
        pass


if __name__ == '__main__':
    unittest.main()
